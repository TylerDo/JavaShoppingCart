/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoppingcart;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Tyler
 */
public class LoginUI extends javax.swing.JFrame {

   String Username, Password, aname;
   File file = new File("accounts.txt");
   int ln;
    
    /**
     * Creates new form LoginUI
     */
    public LoginUI() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
   
     void createFolder(){//Creates a folder for account information
        if(!file.exists())
        {
            file.mkdirs();
        }
    }
    
     void readFile() throws IOException{
        try{
        FileReader fr = new FileReader(file + "\\accounts.txt");
        }catch(FileNotFoundException ex){
            try{
                FileWriter fw = new FileWriter(file);
            }
            catch(IOException ex1){
                Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null,ex1);
            }
        }
    }
     
     void countLines(){
        try{
            RandomAccessFile raf = new RandomAccessFile( file + "\\accounts.txt", "rw");
            for(int i = 0; raf.readLine() != null; i++)
            {
                ln++;
            }
        }catch(FileNotFoundException ex){
            Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null,ex);
        }catch(IOException ex){
            Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null,ex);
        }
        
    }
     
     void addData(String username, String password, String name) throws FileNotFoundException{
        try{
            RandomAccessFile raf = new RandomAccessFile(file + "\\accounts.txt", "rw");
            for(int i = 0; i < ln; i++)
            {
                raf.readLine();
            }

            raf.writeBytes("\r\n");
            raf.writeBytes("Username:" + username + "\r\n");
            raf.writeBytes("Password:" + password + "\r\n");
            raf.writeBytes("Name:" + name + "\r\n");
        }catch(IOException ex){
            Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    
     void checkData(String username, String password) throws IOException{
        try{
            RandomAccessFile raf = new RandomAccessFile(file + "\\accounts.txt", "rw");
            String line = raf.readLine();
            Username = line.substring(9);
            Password = raf.readLine().substring(9);
            aname = raf.readLine().substring(5);
            if(username.equals(Username) & password.equals(Password))
            {
               JOptionPane.showMessageDialog(this, "Login Successful");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Login Failed");
            }
            
        }catch(FileNotFoundException ex){
            Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null, ex);
        }
    }
     
     void logic(String username, String password) throws IOException{
         try{
             RandomAccessFile raf = new RandomAccessFile( file + "\\accounts.txt" , "rw");
             for(int i = 0; i < ln; i += 4)
             {
                 String foruser= raf.readLine().substring(9);
                 String forpass = raf.readLine().substring(9);
                 if(username.equals(foruser) & password.equals(forpass))
                 {
                     JOptionPane.showMessageDialog(null,"Login Successful");
                     
                     this.dispose();
                     UserUI frame = new UserUI();
                     frame.setVisible(true);
                 }
                 else if(i == (ln - 4))
                 {
                     JOptionPane.showMessageDialog(null,"Login Failed");
                 }
                 for(int k = 1; k <= 2; k++)//Skip the blank spaces
                 {
                   raf.readLine();
                 }
             }
         }catch(FileNotFoundException ex){
             Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE,null,ex);
         }
     }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        userText = new javax.swing.JTextField();
        loginbtn = new javax.swing.JButton();
        createAccountbtn = new javax.swing.JButton();
        clearbtn = new javax.swing.JButton();
        passwordText = new javax.swing.JPasswordField();
        name = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        username.setText("Username:");

        password.setText("Password:");

        loginbtn.setText("Login");
        loginbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginbtnMouseClicked(evt);
            }
        });
        loginbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbtnActionPerformed(evt);
            }
        });

        createAccountbtn.setText("Register");
        createAccountbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountbtnActionPerformed(evt);
            }
        });

        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        passwordText.setText("jPasswordField1");
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });

        name.setText("Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(loginbtn)
                    .addComponent(username)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(name)
                        .addComponent(password)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(createAccountbtn)
                        .addGap(64, 64, 64)
                        .addComponent(clearbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordText)
                            .addComponent(userText)
                            .addComponent(nameText, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username)
                    .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginbtn)
                    .addComponent(createAccountbtn)
                    .addComponent(clearbtn))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginbtnActionPerformed
       try {
           createFolder();
           readFile();
           countLines();
           logic(userText.getText(),passwordText.getText());
       } catch (IOException ex) {
           Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_loginbtnActionPerformed

    private void createAccountbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountbtnActionPerformed
        createFolder();
       try {
           readFile();
       } catch (IOException ex) {
           Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE, null, ex);
       }
        countLines();
       try {
           addData(userText.getText(),passwordText.getText(), nameText.getText());
       } catch (FileNotFoundException ex) {
           Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE, null, ex);
       }
    
    }//GEN-LAST:event_createAccountbtnActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
userText.setText("");
passwordText.setText("");
nameText.setText("");
    }//GEN-LAST:event_clearbtnActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void loginbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_loginbtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearbtn;
    private javax.swing.JButton createAccountbtn;
    private javax.swing.JButton loginbtn;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel password;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JTextField userText;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
